---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: nodelabelers.kubebuilder.kube.node.labeler.io
spec:
  group: kubebuilder.kube.node.labeler.io
  names:
    kind: NodeLabeler
    listKind: NodeLabelerList
    plural: nodelabelers
    singular: nodelabeler
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NodeLabeler is the Schema for the nodelabelers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NodeLabelerSpec defines the desired state of NodeLabeler
            properties:
              dryRun:
                type: boolean
              merge:
                properties:
                  configSource:
                    description: 'Deprecated. If specified, the source of the node''s
                      configuration. The DynamicKubeletConfig feature gate must be
                      enabled for the Kubelet to use this field. This field is deprecated
                      as of 1.22: https://git.k8s.io/enhancements/keps/sig-node/281-dynamic-kubelet-configuration'
                    properties:
                      configMap:
                        description: ConfigMap is a reference to a Node's ConfigMap
                        properties:
                          kubeletConfigKey:
                            description: KubeletConfigKey declares which key of the
                              referenced ConfigMap corresponds to the KubeletConfiguration
                              structure This field is required in all cases.
                            type: string
                          name:
                            description: Name is the metadata.name of the referenced
                              ConfigMap. This field is required in all cases.
                            type: string
                          namespace:
                            description: Namespace is the metadata.namespace of the
                              referenced ConfigMap. This field is required in all
                              cases.
                            type: string
                          resourceVersion:
                            description: ResourceVersion is the metadata.ResourceVersion
                              of the referenced ConfigMap. This field is forbidden
                              in Node.Spec, and required in Node.Status.
                            type: string
                          uid:
                            description: UID is the metadata.UID of the referenced
                              ConfigMap. This field is forbidden in Node.Spec, and
                              required in Node.Status.
                            type: string
                        required:
                        - kubeletConfigKey
                        - name
                        - namespace
                        type: object
                    type: object
                  externalID:
                    description: 'Deprecated. Not all kubelets will set this field.
                      Remove field after 1.13. see: https://issues.k8s.io/61966'
                    type: string
                  podCIDR:
                    description: PodCIDR represents the pod IP range assigned to the
                      node.
                    type: string
                  podCIDRs:
                    description: podCIDRs represents the IP ranges assigned to the
                      node for usage by Pods on that node. If this field is specified,
                      the 0th entry must match the podCIDR field. It may contain at
                      most 1 value for each of IPv4 and IPv6.
                    items:
                      type: string
                    type: array
                  providerID:
                    description: 'ID of the node assigned by the cloud provider in
                      the format: <ProviderName>://<ProviderSpecificNodeID>'
                    type: string
                  taints:
                    description: If specified, the node's taints.
                    items:
                      description: The node this Taint is attached to has the "effect"
                        on any pod that does not tolerate the Taint.
                      properties:
                        effect:
                          description: Required. The effect of the taint on pods that
                            do not tolerate the taint. Valid effects are NoSchedule,
                            PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Required. The taint key to be applied to a
                            node.
                          type: string
                        timeAdded:
                          description: TimeAdded represents the time at which the
                            taint was added. It is only written for NoExecute taints.
                          format: date-time
                          type: string
                        value:
                          description: The taint value corresponding to the taint
                            key.
                          type: string
                      required:
                      - effect
                      - key
                      type: object
                    type: array
                  unschedulable:
                    description: 'Unschedulable controls node schedulability of new
                      pods. By default, node is schedulable. More info: https://kubernetes.io/docs/concepts/nodes/node/#manual-node-administration'
                    type: boolean
                type: object
              nodeSelectorTerms:
                description: Required. A list of node selector terms. The terms are
                  ORed.
                items:
                  description: A null or empty node selector term matches no objects.
                    The requirements of them are ANDed. The TopologySelectorTerm type
                    implements a subset of the NodeSelectorTerm.
                  properties:
                    matchExpressions:
                      description: A list of node selector requirements by node's
                        labels.
                      items:
                        description: A node selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: The label key that the selector applies to.
                            type: string
                          operator:
                            description: Represents a key's relationship to a set
                              of values. Valid operators are In, NotIn, Exists, DoesNotExist.
                              Gt, and Lt.
                            type: string
                          values:
                            description: An array of string values. If the operator
                              is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. If the operator is Gt or Lt, the
                              values array must have a single element, which will
                              be interpreted as an integer. This array is replaced
                              during a strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchFields:
                      description: A list of node selector requirements by node's
                        fields.
                      items:
                        description: A node selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: The label key that the selector applies to.
                            type: string
                          operator:
                            description: Represents a key's relationship to a set
                              of values. Valid operators are In, NotIn, Exists, DoesNotExist.
                              Gt, and Lt.
                            type: string
                          values:
                            description: An array of string values. If the operator
                              is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. If the operator is Gt or Lt, the
                              values array must have a single element, which will
                              be interpreted as an integer. This array is replaced
                              during a strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                  type: object
                type: array
              overwrite:
                properties:
                  configSource:
                    description: 'Deprecated. If specified, the source of the node''s
                      configuration. The DynamicKubeletConfig feature gate must be
                      enabled for the Kubelet to use this field. This field is deprecated
                      as of 1.22: https://git.k8s.io/enhancements/keps/sig-node/281-dynamic-kubelet-configuration'
                    properties:
                      configMap:
                        description: ConfigMap is a reference to a Node's ConfigMap
                        properties:
                          kubeletConfigKey:
                            description: KubeletConfigKey declares which key of the
                              referenced ConfigMap corresponds to the KubeletConfiguration
                              structure This field is required in all cases.
                            type: string
                          name:
                            description: Name is the metadata.name of the referenced
                              ConfigMap. This field is required in all cases.
                            type: string
                          namespace:
                            description: Namespace is the metadata.namespace of the
                              referenced ConfigMap. This field is required in all
                              cases.
                            type: string
                          resourceVersion:
                            description: ResourceVersion is the metadata.ResourceVersion
                              of the referenced ConfigMap. This field is forbidden
                              in Node.Spec, and required in Node.Status.
                            type: string
                          uid:
                            description: UID is the metadata.UID of the referenced
                              ConfigMap. This field is forbidden in Node.Spec, and
                              required in Node.Status.
                            type: string
                        required:
                        - kubeletConfigKey
                        - name
                        - namespace
                        type: object
                    type: object
                  externalID:
                    description: 'Deprecated. Not all kubelets will set this field.
                      Remove field after 1.13. see: https://issues.k8s.io/61966'
                    type: string
                  podCIDR:
                    description: PodCIDR represents the pod IP range assigned to the
                      node.
                    type: string
                  podCIDRs:
                    description: podCIDRs represents the IP ranges assigned to the
                      node for usage by Pods on that node. If this field is specified,
                      the 0th entry must match the podCIDR field. It may contain at
                      most 1 value for each of IPv4 and IPv6.
                    items:
                      type: string
                    type: array
                  providerID:
                    description: 'ID of the node assigned by the cloud provider in
                      the format: <ProviderName>://<ProviderSpecificNodeID>'
                    type: string
                  taints:
                    description: If specified, the node's taints.
                    items:
                      description: The node this Taint is attached to has the "effect"
                        on any pod that does not tolerate the Taint.
                      properties:
                        effect:
                          description: Required. The effect of the taint on pods that
                            do not tolerate the taint. Valid effects are NoSchedule,
                            PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Required. The taint key to be applied to a
                            node.
                          type: string
                        timeAdded:
                          description: TimeAdded represents the time at which the
                            taint was added. It is only written for NoExecute taints.
                          format: date-time
                          type: string
                        value:
                          description: The taint value corresponding to the taint
                            key.
                          type: string
                      required:
                      - effect
                      - key
                      type: object
                    type: array
                  unschedulable:
                    description: 'Unschedulable controls node schedulability of new
                      pods. By default, node is schedulable. More info: https://kubernetes.io/docs/concepts/nodes/node/#manual-node-administration'
                    type: boolean
                type: object
            required:
            - nodeSelectorTerms
            type: object
          status:
            description: NodeLabelerStatus defines the observed state of NodeLabeler
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
